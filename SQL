-- Created schema tpg_test in MySQL Workbench
use tpg_test;

-- Created new table with required columns and datatypes
CREATE TABLE churn_data(
    order_id varchar(255),
    loss_date datetime,
    billing_system varchar(255),
    brand varchar(255),
    losing_nbn_speed varchar(255),
    state varchar(255),
    gaining_provider varchar(255),
    gaining_nbn_speed varchar(255)
);
-- Uploaded data using table import wizard, alternatively below code can be used
/* LOAD DATA INFILE 'C:\ProgramData\MySQL\MySQL Server 8.0\Uploads\tpg_churn.csv'
INTO TABLE churn_data
FIELDS TERMINATED BY ';'
LINES TERMINATED BY '\n'
(order_id, loss_date, @date_time_variable, billing_system, brand, losing_nbn_speed, state, gaining_provider, gaining_nbn_speed)
SET loss_date = STR_TO_DATE(@date_time_variable, '%m/%d/%Y'); */

-- Checking no of rows uploaded
select count(*)
from churn_data;

-- The below code will remove the words "Order_id_" from the order_id column, leaving only integer values in the column
update churn_data
SET order_id = CAST(right(order_id, 4) as signed)
where order_id like 'Order_iD_%';

-- Count 'Unknown values' There are 7 unknown values.
select count(*)
from churn_data
where "Unknown" in (order_id, loss_date, billing_system, brand, losing_nbn_speed, state, gaining_provider, gaining_nbn_speed);

-- Reclassify Losing Speed and Gaining Speed to the 7 standardized nbn speed tiers as shown on the field definition tab
UPDATE churn_data
SET 
losing_nbn_speed = REPLACE(losing_nbn_speed, 'Speed', 'NBN')
where losing_nbn_speed like '%Speed%';

-- Similar reclassification done on gaining column, also replaced '-' with '/' as per data dictionary
UPDATE churn_data
SET 
gaining_nbn_speed = REPLACE(gaining_nbn_speed, 'Speed', 'NBN')
where gaining_nbn_speed like '%Speed%';

-- checking the unique values 
select distinct(losing_nbn_speed)
from churn_data

-- create column'speed_change' with 3 unique values 'upgraded', 'downgraded', 'same speed'
ALTER TABLE churn_data
ADD COLUMN speed_change VARCHAR(255);

UPDATE churn_data
SET speed_change =
case
when losing_nbn_speed = gaining_nbn_speed then 'same speed'
when losing_nbn_speed = 'NBN12' and gaining_nbn_speed <> 'NBN12' then 'upgraded'
when losing_nbn_speed = 'NBN25' and gaining_nbn_speed not in('NBN12', 'NBN25') then 'upgraded'
when losing_nbn_speed = 'NBN50' and gaining_nbn_speed not in ('NBN12', 'NBN25', 'NBN50') then 'upgraded'
when losing_nbn_speed = 'NBN100/20' and gaining_nbn_speed in ('NBN100', 'NBN250', 'NBN1000') then 'upgraded'
when losing_nbn_speed = 'NBN100' and gaining_nbn_speed in ('NBN250', 'NBN1000') then 'upgraded'
when losing_nbn_speed = 'NBN250' and gaining_nbn_speed in ('NBN1000') then 'upgraded'
ELSE 'downgraded'
END;

-- Data exported to csv to be loaded into PowerBI
